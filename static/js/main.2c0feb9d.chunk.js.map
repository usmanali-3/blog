{"version":3,"sources":["components/home.js","components/nav.js","components/footer.js","components/createPost.js","components/show.js","components/editPost.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","post","PostData","react_default","a","createElement","className","keys","map","key","created_at","title","ReactHtmlParser","body","react_router_dom","to","concat","slug","getPost","_this2","axios","get","then","res","setState","data","console","log","catch","error","Component","Nav","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Footer","CreatePost","onChangeTitle","bind","assertThisInitialized","onChangeCategory","handleSubmit","category","newCategory","e","target","value","event","preventDefault","postData","history","push","_this3","onSubmit","onChange","placeholder","ckeditor_default","editor","ClassicEditor","getData","getCategories","_this4","Show","DeletePost","aria-labelledby","onClick","Post","match","params","delete","EditPost","editPost","onBodyChange","categoryData","react_quill_lib_default","theme","App","nav","react_router","path","component","exact","footer","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c0feb9d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport ReactHtmlParser from 'react-html-parser';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { post:'Home', }\n    }\n    render() { \n        let PostData = this.state.post;\n        return ( \n            <div>\n                <div className=\"container mt-5 mb-5\">\n                    <div className=\"col-md-8\">\n                        { Object.keys(PostData).map(function (key) {\n                            return ( \n                                <div className=\"card mb-3\" key={key}>\n                                    <div className=\"card-header\">\n                                        by AJay Marathe on {PostData[key].created_at}\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <h1> {PostData[key].title}</h1>\n                                        <div>\n                                            {ReactHtmlParser(PostData[key].body)} \n                                        </div>   \n                                        <Link  to={`show/${PostData[key].slug}`} className=\"btn btn-primary btn-sm\" >Read More ></Link>\n                                    </div>\n                                </div>\n                            )\n                          })\n\n                        }\n                    </div>\n                </div>\n            </div>\n         );\n    }\n\n    componentDidMount(){\n        this.getPost();\n    }\n\n    getPost(){\n        axios.get('http://localhost:8000/api/posts')\n          .then(res => {\n              this.setState({\n                  post: res.data\n              });\n              console.log(res)\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n    }\n}\n \nexport default Home;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Nav extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return ( \n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                    <Link to=\"/\" className=\"navbar-brand\">React Blog</Link>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                        <ul className=\"navbar-nav\">\n                            <li className=\"nav-item active\">\n                                <Link to=\"/create\" className=\"nav-link\">Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to=\"/create\" className=\"nav-link\">Create Post</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"Category\">Pricing</a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n         );\n    }\n}\n \nexport default Nav;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return ( \n            <div className=\"container-fluid bg-primary text-white\">\n                <div className=\"py-3 \">\n                    <p className=\"mb-0\">Copyright by bootcatch.com 2019</p>\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Footer;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nclass CreatePost extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeCategory = this.onChangeCategory.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = { \n            title: '',\n            category: '',\n            body: '',\n\n            newCategory: '',\n         }\n    }\n\n    onChange(e){\n        this.setState({\n            body: e.target.value\n        });\n    }\n\n    onChangeTitle(e){\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onChangeCategory(e){\n        this.setState({\n            newCategory: e.target.value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        let postData = [this.state.title, this.state.newCategory, this.state.body];\n        console.log(postData);\n\n        axios.post('http://localhost:8000/api/posts',{\n            title: postData[0],\n            category: postData[1],\n            body: postData[2],\n        })\n        .then(res =>{\n            this.props.history.push('/')\n            console.log(res)\n        })\n    }\n\n    render() { \n        let postData = this.state;\n        return ( \n            <div>\n                <div className=\"container mt-5 mb-5\">\n                    <h1>Create Post...</h1>\n\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                            <form onSubmit={this.handleSubmit}> \n                                <div className=\"form-group\">\n                                    <label >Title: </label>\n                                    <input type=\"text\"  value={postData.title || ''} onChange={this.onChangeTitle} className=\"form-control\"  placeholder=\"Enter Title\" />\n                                </div>\n                                <div className='form-group'>\n                                    <label>Category: </label>\n                                    <select  value={postData.newCategory || ''} onChange={this.onChangeCategory} className=\"custom-select\" >\n                                        { \n                                            Object.keys(postData.category).map(function (key) {\n                                                return ( \n                                                    <option key={key}>{postData.category[key].category}</option>\n                                                )\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                   <label> Body:</label>\n                                    <CKEditor\n                                        editor={ ClassicEditor }\n                                        onChange={ ( event, editor ) => {\n                                            const data = editor.getData();\n                                            this.setState({\n                                                body: data\n                                            });\n                                        } }\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <button type=\"submit\" className=\"btn btn-primary\">Publish</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n         );\n    }\n\n\n    componentDidMount(){\n        this.getCategories();\n    }\n\n    getCategories(){\n        axios.get( 'http://127.0.0.1:8000/api/category' )\n        .then(res=>{\n            this.setState({\n                category: res.data\n            })\n            // console.log(res.data)\n        })\n    }\n}\n \nexport default CreatePost;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport ReactHtmlParser from 'react-html-parser';\n\nclass Show extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { post:'', }\n\n        this.DeletePost = this.DeletePost.bind(this);\n\n    }\n    render() { \n        let PostData = this.state.post;\n        return ( \n            <div>\n                <div className=\"container mt-5 mb-5\">\n                    <div className=\"col-md-8\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                By AJay Marathe on {PostData.created_at}\n                            </div>\n                            <div className=\"card-body\">\n                                <h1>{PostData.title}</h1>\n                                <div>{ReactHtmlParser(PostData.body)}</div>\n                                <div className=\"d-flex justify-content-end\">\n                                    <button className=\"btn btn-sm btn-warning\"  id=\"dropdownMenuButton\" data-toggle=\"dropdown\">Menu</button>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                                        <Link to={`/edit/${PostData.slug}`} className=\"dropdown-item\">\n                                            Edit\n                                        </Link> \n                                        <a className=\"dropdown-item\" onClick={this.DeletePost}>Delete</a>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-footer\">\n                                <div className=\"form-group\">\n                                    <input className=\"form-control\" placeholder=\"Leave comment\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n         );\n    }\n\n    componentDidMount(){\n        this.Post();\n    }\n\n    Post(){\n        const slug = this.props.match.params.id;\n        // console.log(slug);\n        \n        axios.get('http://127.0.0.1:8000/api/posts/'+slug)\n        .then(res => {\n            this.setState({\n                post: res.data,\n            });\n            console.log(res);\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    DeletePost(){\n        const slug = this.props.match.params.id;\n        axios.delete('http://127.0.0.1:8000/api/posts/'+slug)\n        .then(res =>{\n            console.log(res);\n        })\n        .catch((error) => {\n            this.props.history.push('/');\n            console.log(error);\n        })\n        \n    }\n}\n \nexport default Show;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactQuill from 'react-quill'; // ES6\nimport 'react-quill/dist/quill.bubble.css'; // ES6\n\nclass EditPost extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            newCategory: '',\n            body: '',\n\n            editPost: {\n                title: '',\n                \n            },\n            category: ''\n         }\n\n\n         this.onChangeTitle = this.onChangeTitle.bind(this);\n         this.onChangeCategory = this.onChangeCategory.bind(this);\n         this.onBodyChange = this.onBodyChange.bind(this)\n         this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    onChangeTitle(e){\n        this.setState({\n            editPost:{\n                title:  e.target.value\n            }\n        });\n    }\n\n    onChangeCategory(e){\n        this.setState({\n            newCategory: e.target.value\n        });\n    }\n\n    onBodyChange(value) {\n        this.setState({ \n            body:  value\n        })\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n\n        let postData = [this.state.editPost.title, this.state.newCategory, this.state.editPost.body];\n        console.log(postData);\n    }\n\n    render() { \n        let categoryData = this.state.category;\n        return ( \n            <div>\n                <div className=\"container mt-5 mb-5\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                        <form onSubmit={this.handleSubmit}> \n                                <div className=\"form-group\">\n                                    <label >Title: {this.state.editPost.title} </label>\n                                    <input type=\"text\"  value={this.state.editPost.title || ''} onChange={this.onChangeTitle} className=\"form-control\"  placeholder=\"Enter Title\" />\n                                </div>\n                                <div className='form-group'>\n                                    <label>Category: {this.state.newCategory} </label>\n                                    <select  value={this.state.newCategory || ''} onChange={this.onChangeCategory} className=\"custom-select\" >\n                                        { \n                                            Object.keys(categoryData).map(function (key) {\n                                                return ( \n                                                    <option key={key}>{ categoryData[key].category}</option>\n                                                )\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                   <label> Body: {this.state.body}</label>\n                                   <ReactQuill theme=\"bubble\" value={this.state.editPost.body || ''} onChange={this.onBodyChange} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <button type=\"submit\" className=\"btn btn-primary\">Publish</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n         );\n    }\n\n    componentDidMount(){\n        this.getPost();\n        this.getCategories();\n    }\n\n    getPost(){\n        const slug = this.props.match.params.id;\n        console.log(slug);\n\n        axios.get('http://127.0.0.1:8000/api/posts/'+slug)\n        .then(res =>{\n            this.setState({\n                editPost: res.data\n            });\n            // console.log(res);\n        })\n    }\n\n    getCategories(){\n        axios.get('http://127.0.0.1:8000/api/category')\n        .then(res =>{\n            this.setState({\n                category: res.data\n            });\n            // console.log(res);\n        })\n    }\n}\n \nexport default EditPost;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \nimport Home  from './components/home';\nimport Nav from './components/nav';\nimport Footer from './components/footer';\nimport CreatePost from './components/createPost';\nimport Show from './components/show';\nimport EditPost from './components/editPost';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <BrowserRouter>\n        <Nav/>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/create\" component={CreatePost} /> \n        <Route path=\"/show/:id\" component={Show} /> \n        <Route path=\"/edit/:id\" component={EditPost} /> \n        <Footer/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}